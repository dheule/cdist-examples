#!/bin/sh
# Nico Schottelius
# Mon Oct  1 09:40:26 CEST 2012
#
# kvm-vms      Start up the KVM VMs
#
# chkconfig: 2345 60 20
# description: Start the VMs
#
### BEGIN INIT INFO
# Provides: kvm-vms
# Required-Start: $local_fs $network $syslog
# Required-Stop: $local_fs $syslog
# Should-Start: $syslog
# Should-Stop: $network $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start up the KVM VMs
# Description:       Start up the KVM VMs
### END INIT INFO

# Change this to read from the default kvm location
basedir=/opt/local.ch/sys/kvm/vm

broken_lock_file_for_centos=/var/lock/subsys/kvm-vms

# Start screen to attach VMs to

case "$1" in
    start)
        cd "$basedir"
        
        # Specific VM given
        if [ "$2" ]; then
            vm_list=$2
        else
            vm_list=$(ls)
        fi

        for vm in $vm_list; do
            vm_base_dir="$basedir/$vm"
            start_script="$vm_base_dir/start"

            # Skip start of machines which should not start
            if [ ! -f "$vm/start-on-boot" ]; then
                continue
            fi

            echo "Starting VM $vm ..."
            logger -t kvm-vms "Starting VM $vm ..."
            screen -d -m -S "$vm" "$start_script"
        done

        touch "$broken_lock_file_for_centos"
    ;;

    stop)
        cd "$basedir"
        
        # Specific VM given
        if [ "$2" ]; then
            vm_list=$2
        else
            vm_list=$(ls)
        fi


        for vm in $vm_list; do
            vm_base_dir="$basedir/$vm"
            monitor="$vm_base_dir/monitor"

            echo "Stopping VM $vm ..."
            logger -t kvm-vms "Stopping VM $vm ..."

            if [ -S "$monitor" ]; then
                echo "Sending system_powerdown to $vm ..."
                echo system_powerdown | socat - "UNIX-CONNECT:$monitor"
            fi
        done
        echo "Waiting for VMs to shut down..."
        
        i=0
        # Try & wait 30 seconds, than abort
        while [ $i -lt 30 ]; do
            pgrep qemu-kvm || break
            i=$(($i+1))
            sleep 1
        done

        rm -f "$broken_lock_file_for_centos"
    ;;

    restart)
        $0 stop && $0 start
    ;;

    *)
        echo "Unknown action $1" >&2
        logger -t kvm-vms "Unknown action $1" >&2
    ;;
esac
